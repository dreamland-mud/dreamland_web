=== Running existing Django project ===
virtualenv django-env 
. django-env/bin/activate
pip install django
pip install djangorestframework
pip install django-filter

python manage.py makemigration
python manage.py migrate [first run this command]
or following command
./manage.py migrate

python manage.py createsuperuser
or 
./manage.py createsuperuser

python manage.py runserver [use in windows]
or
./manage.py runserver  [0.0.0.0:8000]

=== Starting Django project from scratch ===
virtualenv django-env 
. django-env/bin/activate
pip install django
pip install djangorestframework
pip install django-filter

django-admin startproject website
cd website 
python manage.py startapp searcher
or 
django-admin startapp searcher
cd website

export PYTHONPATH=..
# edit settings.py, add 'searcher', restframework, django_filters to INSTALLED_APPS
./manage.py migrate
./manage.py createsuperuser
./manage.py runserver  [0.0.0.0:port]

# edit models, then run
./manage.py makemigration
./manage.py migrate

# edit api_urls, urls
# edit admin.py to register models

=== Adding new command ===
create management/commands/yourcmd.py
create __init__.py in all empty folders

=== Adding GZIP middleware ===
MIDDLEWARE_CLASSES = (
    'django.middleware.gzip.GZipMiddleware',
    ...

=== Adding CORS support ===
pip install django-cors-headers
INSTALLED_APPS = (
    ...
    'pipeline',
    'corsheaders'
)
MIDDLEWARE_CLASSES = (
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    ...
)

=== Configuring SSL for dev server ===
apt-get install stunnel
mkdir stunnel
cd stunnel
# Generate keys: openssl option
#openssl genrsa 1024 > stunnel.key
#openssl req -new -x509 -nodes -sha1 -days 365 -key stunnel.key > stunnel.cert
# Generate keys: existing cert option
copy /path/to/letsencrypt/cert.pem and privkey.pem 
cat stunnel.key stunnel.cert > stunnel.pem
cat < EOM > dev_https
pid=

cert = stunnel/stunnel.pem
sslVersion = all
foreground = yes
output = stunnel.log

[https]
accept=<sslport>
connect=<port1>
TIMEOUTclose=1

cd ..
stunnel4 stunnel/dev_https &
python manage.py runserver&
HTTPS=1 python manage.py runserver <port1>

=== Updating SSL certificates for new domains ===
certbot certonly --expand -d <comma-separated list of domain names>

